/*
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.
*/

class Solution {
public:
	bool search(int A[], int n, int target) {
		if (n < 0)
			return false;
		int left = 0;
		int right = n - 1;
		while (left <= right)
		{
			int middle = left + ((right - left) >> 1);
			if (A[middle] == target)
				return true;
			while (left <= right && A[middle] == A[left] && A[middle] == A[right])
			{
				left++;
				right--;
			}
			if (A[middle] <= A[right])
			{
				if (A[middle] < target && target <= A[right])
					left = middle + 1;
				else
					right = middle - 1;
			}
			else
			{
				if (target >= A[left] && A[middle] > target)
					right = middle - 1;
				else
					left = middle + 1;
			}
		}
		return false;
	}
};
