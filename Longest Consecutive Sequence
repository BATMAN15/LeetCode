/*
Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.
*/

class Solution {
public:
	int longestConsecutive(vector<int> &num) {
		if (num.size() == 0)
			return 0;
		if (num.size() == 1)
			return 1;

		map<int, int> Map;
		vector<int>::iterator p = num.begin();
		while (p != num.end())
			Map[*p++] = 1;
		int result = 0;
		int count = 0;
		for (int i = 0; i < static_cast<int>(num.size()); i++)
		{
			count = 0;
			if (Map.count(num[i]))
			{
				count++;
				Map.erase(num[i]);
				int left = num[i] - 1;
				int right = num[i] + 1;
				while (Map.count(left))
				{
					count++;
					Map.erase(left--);
				}
				while (Map.count(right))
				{
					count++;
					Map.erase(right++);
				}
				if (count > result)
					result = count;
			}
		}
		return result;
	}
};
