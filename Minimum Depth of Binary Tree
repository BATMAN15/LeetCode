/*
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
*/

class Solution {
public:
	int minDepth(TreeNode *root) {
		int minlength = 99999;
		if (root == nullptr)
			return 0;
		int val = 1;
		depth(root, val, minlength);
		return minlength;
	}
private:
	int depth(TreeNode *root, int val, int &minlength)
	{
		if (root->left)
		{
			depth(root->left, val + 1, minlength);
		}
		if (root->right)
		{
			depth(root->right, val + 1, minlength);
		}
		if (!root->left && !root->right)
		{
			if (val < minlength)
				minlength = val;
		}
	}
};
