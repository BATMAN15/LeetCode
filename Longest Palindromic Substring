/*
Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.
*/

class Solution {
public:
	string longestPalindrome(string s) {
		string res;
		res.clear();
		int max = 0;
		for (int i = 0; i < s.size(); ++i)
		{
			int count = 1;
			int j, k;
			for (j = i - 1, k = i + 1; j >= 0 && k < s.size(); --j, ++k)
			{
				if (s[j] != s[k])
					break;
			}
			count = k - j - 1;
			if (count > max)
			{
				max = count;
				res = s.substr(j + 1, count);
			}
			for (j = i, k = i + 1; j >= 0 && k < s.size(); --j, ++k)
			{
				if (s[j] != s[k])
					break;
			}
			count = k - j - 1;
			if (count > max)
			{
				max = count;
				res = s.substr(j + 1, count);
			}
		}
		return res;
	}
};
