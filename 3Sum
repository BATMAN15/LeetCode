/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
*/

class Solution {
public:
	vector<vector<int> > threeSum(vector<int> &num) {
		sort(num.begin(), num.end());
		vector<int> temp;
		vector<vector<int> > res;
		int m, n;
		for (int i = 0; i < num.size(); ++i)
		{
			if (i != 0 && num[i] == num[i - 1])
				continue;
			m = i + 1, n = num.size() - 1;
			int pre = 0x7fffffff;
			while (m < n)
			{
				if (num[m] == pre)
				{
					++m;
					continue;
				}
				int sum = num[m] + num[n] + num[i];
				if (sum < 0)
					++m;
				else if (sum > 0)
					--n;
				else
				{
					temp.clear();
					temp.push_back(num[m]);
					temp.push_back(num[i]);
					temp.push_back(num[n]);
					sort(temp.begin(), temp.end());
					res.push_back(temp);
					pre = num[m];
					++m, --n;
				}
			}
		}
		return res;
	}
};
