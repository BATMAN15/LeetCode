/*
Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
*/

class Solution {
public:
	void setZeroes(vector<vector<int> > &matrix) {
		int m = matrix.size();
		if (m < 1)
			return;
		int n = matrix[0].size();
		bool row = false;
		bool column = false;
		for (int i = 0; i < m; ++i)
		{
			for (int j = 0; j < n; ++j)
			{
				if (matrix[i][j] == 0)
				{
					matrix[0][j] = 0;
					matrix[i][0] = 0;
					if (i == 0)
						row = true;
					if (j == 0)
						column = true;
				}
			}
		}

		for (int i = 1; i < m; ++i)
		{
			for (int j = 1; j < n; ++j)
			{
				if (matrix[i][0] == 0 || matrix[0][j] == 0)
					matrix[i][j] = 0;
			}
		}
		if (row)
		{
			for (int j = 0; j < n; ++j)
				matrix[0][j] = 0;
		}
		if (column)
		{
			for (int i = 0; i < m; ++i)
				matrix[i][0] = 0;
		}
	}
};
