/*
Given a binary tree, return the preorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,2,3].

Note: Recursive solution is trivial, could you do it iteratively?
*/

class Solution {
public:
	vector<int> preorderTraversal(TreeNode *root) 
	{
		stack<TreeNode*> st;
		vector<int> result;
		if (root != NULL)
			st.push(root);
		while (!st.empty())
		{
			TreeNode *t = st.top();
			st.pop();
			result.push_back(t->val);
			if (t->right != NULL)
				st.push(t->right);
			if (t->left != NULL)
				st.push(t->left);
		}
		return result;
	}
};
