/*
Given a linked list, determine if it has a cycle in it.

Follow up:
Can you solve it without using extra space?
*/

class Solution {
public:
	bool hasCycle(ListNode *head) 
	{
		if (NULL == head)
			return false;
		else
		{
			ListNode *p1 = head;
			ListNode *p2 = head;
			while (p2->next != NULL && p2->next->next != NULL)
			{
				p1 = p1->next;
				p2 = p2->next->next;
				if (p1 == p2)
					return true;
			}
		}
		return false;
	}
};
