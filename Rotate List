/*
Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.
*/

class Solution {
public:
	ListNode *rotateRight(ListNode *head, int k) {
		if (head == nullptr)
			return nullptr;
		if (k == 0)
			return head;
		ListNode *p = head;
		ListNode *q = head;
		ListNode *pre = head;
		int i = 0;
		while (i < k && q)
		{
			pre = q;
			q = q->next;
			++i;
		}
		if(!q)
		{
			int length = i;
			k = k%length;
			if (0 == k)
				return head;
			q = head;
			pre = head;
			i = 0;
			while (i < k && q)
			{
				pre = q;
				q = q->next;
				++i;
			}
		}

		while (q->next != nullptr)
		{
			q = q->next;
			p = p->next;
		}
		ListNode *newhead = p->next;
		q->next = head;
		p->next = nullptr;
		head = newhead;
		return head;
	}
};
