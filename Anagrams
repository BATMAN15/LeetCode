/*
Given an array of strings, return all groups of strings that are anagrams.

Note: All inputs will be in lower-case.
*/

class Solution {
public:
	vector<string> anagrams(vector<string> &strs) {
		vector<string> result;
		result.clear();
		if (strs.size() < 1)
			return result;
		map<string, int> Map;
		map<string, int>::iterator p;
		for (int i = 0; i < strs.size(); ++i)
		{
			string str = strs[i];
			sort(str.begin(), str.end());
			p = Map.find(str);
			if (p != Map.end())
			{
				if (p->second != -1)
				{
					result.push_back(strs[Map[str]]);
					result.push_back(strs[i]);
					p->second = -1;
				}
				else 
				{
					result.push_back(strs[i]);
				}
			}
			else
			{
				Map[str] = i;
			}
		}
		return result;
	}
};
