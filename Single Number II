/*
Given an array of integers, every element appears three times except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
*/

class Solution {
public:
	int singleNumber(int A[], int n) {
		if (n == 0)
			return 0;
		int sum[32];
		memset(sum, 0, sizeof(sum));
		for (int j = 0; j < n; j++)
		{
			for (int k = 0; k < 32; k++)
			{
				sum[k] +=(A[j]>>k) & (1);
				sum[k] = sum[k] % 3;
			}
		}
		int result = 0;
		for (int i = 0; i < 32; i++)
		{
			result += (sum[i] << i);
		}
		return result;
	}
};
