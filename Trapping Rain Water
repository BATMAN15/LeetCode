/*
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.


The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!
*/

class Solution {
public:
	int trap(int A[], int n) {
		if (n < 3)
			return 0;
		vector<int> leftMax(n);
		vector<int> rightMax(n);
		int max = 0;
		for (int i = 0; i < n; ++i)
		{
			leftMax[i] = max;
			max = max > A[i] ? max : A[i];
		}
		max = 0;
		for (int i = n - 1; i >= 0; --i)
		{
			rightMax[i] = max;
			max = max > A[i] ? max : A[i];
		}
		int valumn = 0;
		for (int i = 0; i < n; ++i)
		{
			int temp = (leftMax[i] < rightMax[i] ? leftMax[i] : rightMax[i]) - A[i];
			if (temp > 0)
				valumn += temp;
		}
		
		return valumn;
	}
};
