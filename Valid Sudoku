/*
Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.

The Sudoku board could be partially filled, where empty cells are filled with the character '.'.


A partially filled sudoku which is valid.

Note:
A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.
*/

class Solution {
public:
	bool isValidSudoku(vector<vector<char> > &board) 
	{
		for (int i = 0; i < 9; ++i)
		{
			vector<int> markr(9, 0);
			vector<int> markc(9, 0);
			for (int j = 0; j < 9; ++j)
			{
				if (board[i][j] != '.')// row
				{
					if (markr[board[i][j] - '1'] > 0)
						return false;
					else
						markr[board[i][j] - '1']++;
				}
				if (board[j][i] != '.')// column
				{
					if (markc[board[j][i] - '1'] > 0)
						return false;
					else
						markc[board[j][i] - '1']++;
				}
			}
		}
		for (int i = 0; i < 9; i += 3)
		{
			for (int j = 0; j < 9; j += 3)
			{
				vector<int> mark(9, 0);
				for (int m = 0; m < 3; ++m)
				{
					for (int n = 0; n < 3; ++n)
					{
						if (board[i + m][j + n] != '.')
						{
							if (mark[board[i + m][j + n] - '1'] > 0)
								return false;
							else
								mark[board[i + m][j + n] - '1']++;
						}
					}
				}
			}
		}
		return true;
	}
};
